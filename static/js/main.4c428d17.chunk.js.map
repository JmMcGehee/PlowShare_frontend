{"version":3,"sources":["components/Nav.js","constants.js","components/Index.js","components/Calendar/Calendar.js","components/Show.js","components/Form.js","components/New.js","App.js","serviceWorker.js","index.js"],"names":["Nav","Component","BASE_URL","Index","state","listings","this","getListings","fetch","then","response","json","setState","catch","error","console","log","map","equipment","key","id","title","src","img","alt","year","make","model","rate","Calendar","dateContext","moment","today","showMonthPopup","showYearPopup","weekdaysShort","weekdays","months","format","month","daysInMonth","currentDay","currentDate","get","firstDayOfMonth","startOf","day","className","blanks","i","push","d","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems","Show","Form","handleChange","event","target","value","handleSubmit","preventDefault","newListing","body","JSON","stringify","method","headers","createdListing","jsonedListing","onSubmit","htmlFor","type","onChange","New","formVisible","toggleForm","onClick","App","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c428d17.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Nav extends Component {\n  render () {\n    return (\n      <>\n        <h3>Nav Component</h3>\n      </>\n    )\n  }\n}\n\nexport { Nav } \n","const BASE_URL = \"http://localhost:3000\"\n\n// const BASE_URL = \"https://plowshare-app-backend.herokuapp.com\"\n\nexport { BASE_URL }\n","import React, { Component } from 'react'\nimport { BASE_URL } from '../constants'\n\nclass Index extends Component {\n  state = {\n    listings: []\n  }\n  componentDidMount () {\n    this.getListings()\n  }\n  getListings () {\n    fetch( BASE_URL + '/equipment')\n    .then(response => response.json())\n    .then(json => this.setState({\n      listings: json,\n    }))\n    .catch(error => console.log(error))\n  }\n  render () {\n    return (\n      <>\n        <h1>Index Page</h1>\n        {\n          this.state.listings.map(\n            equipment =>\n              <div key={equipment.id}>\n                <h3>{equipment.title}</h3>\n                <img src={equipment.img} alt={equipment.title}/>\n                <h5>Description</h5>\n                <p>{equipment.year} {equipment.make} {equipment.model}</p>\n                <h4>Rate</h4><p>${equipment.rate}/day</p>\n              </div>\n          )\n        }\n      </>\n    )\n  }\n}\n\nexport { Index }\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport './calendar.css'\n\nclass Calendar extends Component {\n  state = {\n    dateContext: moment(),\n    today: moment(),\n    showMonthPopup: false,\n    showYearPopup: false\n  }\n\n  weekdaysShort = moment.weekdaysShort()\n  weekdays = moment.weekdays()\n  months = moment.months()\n\n  year = () => {\n    return this.state.dateContext.format(\"Y\")\n  }\n  month = () => {\n    return this.state.dateContext.format(\"MMMM\")\n  }\n  daysInMonth = () => {\n    return this.state.dateContext.daysInMonth()\n  }\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\")\n  }\n  currentDate = () => {\n    console.log(\"currentDate: \", this.state.dateContext.get(\"date\"));\n    return this.state.dateContext.get(\"date\");\n  }\n  firstDayOfMonth = () => {\n    let dateContext = this.state.dateContext\n    let firstDay = moment(dateContext).startOf('month').format('d')\n    return firstDay\n  }\n\n  render () {\n    let weekdays = this.weekdaysShort.map((day) => {\n      return (\n        <td key={day} className=\"week-day\">\n          {day}\n        </td>\n      )\n    })\n\n    let blanks = []\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(\n        <td key={i * 99} className=\"emptySlot\">\n          {\"\"}\n        </td>\n      )\n    }\n\n    let daysInMonth = []\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = (d == this.currentDay() ? \"day current-day\" : \"day\")\n      daysInMonth.push(\n        <td key={d} className={className}>\n          <span>{d}</span>\n        </td>\n      )\n    }\n\n    let totalSlots = [...blanks, ...daysInMonth]\n    let rows = []\n    let cells = []\n\n    totalSlots.forEach((row, i) => {\n      if ((i % 7) !== 0) {\n        cells.push(row)\n      } else {\n        let insertRow = cells.slice()\n        rows.push(insertRow)\n        cells = []\n        cells.push(row)\n      }\n      if (i === totalSlots.length -1) {\n        let insertRow = cells.slice()\n        rows.push(insertRow)\n      }\n    })\n\n    let trElems = rows.map((d,i) => {\n      return (\n        <tr key={i*100}>\n          {d}\n        </tr>\n      )\n    })\n\n    return (\n      <div className=\"calendar-container\">\n        <table className=\"calendar\">\n          <thead>\n            <tr className=\"calendar-header\">\n            </tr>\n          </thead>\n          <tbody>\n            <tr>{weekdays}</tr>\n            {trElems}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport { Calendar }\n","import React, { Component } from 'react'\nimport { Calendar } from './Calendar/Calendar'\n\nclass Show extends Component {\n  render () {\n    return (\n      <>\n        <h2>Show Page</h2>\n        <Calendar />\n      </>\n    )\n  }\n}\n\nexport { Show }\n","import React, { Component } from 'react'\nimport { BASE_URL } from '../constants'\n\nclass Form extends Component {\n  state = {\n    title: '',\n    img: '',\n    make: '',\n    model: '',\n    year: 0,\n    rate: 0,\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const newListing = {\n      title: this.state.title,\n      img: this.state.img,\n      make: this.state.make,\n      model: this.state.model,\n      year: this.state.year,\n      rate: this.state.rate\n    }\n    console.log(newListing)\n    fetch( BASE_URL + '/equipment', {\n      body: JSON.stringify(newListing),\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(createdListing => createdListing.json())\n    .then(jsonedListing => console.log(jsonedListing))\n    .catch(error => console.log(error))\n  }\n  render () {\n    return (\n      <div>\n        <h3>Create a New Listing</h3>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            id=\"title\"/>\n          <br/>\n          <label htmlFor=\"img\">Image URL:</label>\n          <input\n            type=\"text\"\n            value={this.state.img}\n            onChange={this.handleChange}\n            id=\"img\"/>\n          <br/>\n          <label htmlFor=\"make\">Make:</label>\n          <input\n            type=\"text\"\n            value={this.state.make}\n            onChange={this.handleChange}\n            id=\"make\"/>\n          <br/>\n          <label htmlFor=\"model\">Model:</label>\n          <input\n            type=\"text\"\n            value={this.state.model}\n            onChange={this.handleChange}\n            id=\"model\"/>\n          <br/>\n          <label htmlFor=\"year\">Year:</label>\n          <input\n            type=\"number\"\n            value={this.state.year}\n            onChange={this.handleChange}\n            id=\"year\"/>\n          <br/>\n          <label htmlFor=\"rate\">Cost per Day:</label>\n          <input\n            type=\"number\"\n            value={this.state.rate}\n            onChange={this.handleChange}\n            id=\"rate\"/>\n          <br/>\n          <input\n            type=\"submit\"\n          />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport { Form }\n","import React, { Component } from 'react'\nimport { Form } from './Form'\n\nclass New extends Component {\n  state = {\n    formVisible: false\n  }\n  toggleForm = () => {\n    this.setState({formVisible: !this.state.formVisible})\n  }\n  render () {\n    return (\n      <>\n        <h3>New Page</h3>\n        {\n          this.state.formVisible ? <Form />\n          :\n          <button onClick={this.toggleForm}>\n              Add New Listing\n          </button>\n        }\n      </>\n    )\n  }\n}\n\nexport { New }\n","import React from 'react'\nimport { Nav } from './components/Nav'\nimport { Index } from './components/Index'\nimport { Show } from './components/Show'\nimport { New } from './components/New'\n\n\nclass App extends React.Component {\n  state = {\n    listings : []\n  }\n  render () {\n    return (\n      <>\n        <Nav />\n        <Show />\n        <New />\n        <Index\n          getListings={this.getListings}\n        />\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}