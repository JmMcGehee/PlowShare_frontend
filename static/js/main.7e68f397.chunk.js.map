{"version":3,"sources":["components/Nav.js","components/Home.js","components/Calendar/Calendar.js","components/Show.js","components/Listing.js","components/Search.js","components/Index.js","constants.js","components/Form.js","components/New.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","Component","Home","props","Calendar","state","dateContext","moment","today","showMonthPopup","showYearPopup","weekdaysShort","weekdays","months","year","format","month","daysInMonth","currentDay","currentDate","console","log","get","firstDayOfMonth","startOf","setMonth","monthNumber","indexOf","Object","assign","set","setState","nextMonth","add","onNextMonth","prevMonth","subtract","onPrevMonth","onSelectChange","event","data","onMonthChange","SelectList","popup","map","key","href","onClick","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","onYearChange","target","value","onKeyUpYear","which","YearNav","type","defaultValue","ref","yearInput","onKeyUp","onChange","placeholder","onDoubleClick","onDayClick","e","day","selectedDay","this","blanks","i","push","d","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems","colSpan","Show","Listing","showListing","listing","toggleShow","findListing","listingId","title","src","img","alt","make","model","rate","location","Search","action","htmlFor","name","Index","listings","equipment","id","BASE_URL","Form","handleChange","handleSubmit","preventDefault","newListing","fetch","body","JSON","stringify","method","headers","then","createdListing","json","jsonedListing","catch","error","onSubmit","New","formVisible","toggleForm","Edit","handleUpdate","updatedListing","handleDelete","App","copyListings","findIndex","getListings","deletedNotice","response","path","exact","component","render","React","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e68f397.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"\n\nclass Nav extends Component {\n  render () {\n    return (\n      <div className=\"nav\">\n        <header>\n        <h3>Nav Component</h3>\n        <nav>\n          <Link to=\"/home\">Home</Link>\n          <Link to=\"/index\">Listings</Link>\n          <Link to=\"/new\">New</Link>\n          <button>| Log in |</button>\n          <button>| Sign up |</button>\n        </nav>\n        <h1>PlowShare</h1>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport { Nav }\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Home(props) {\n  return (\n    <div className=\"home\">\n      <Link to=\"/new\">List</Link>\n      <Link to=\"/index\">Rent</Link>\n      <Link to=\"#\">Posper</Link>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport './calendar.css'\n\nclass Calendar extends Component {\n  state = {\n    dateContext: moment(),\n    today: moment(),\n    showMonthPopup: false,\n    showYearPopup: false\n  }\n\n  weekdaysShort = moment.weekdaysShort()\n  weekdays = moment.weekdays()\n  months = moment.months()\n\n  year = () => {\n    return this.state.dateContext.format(\"Y\")\n  }\n  month = () => {\n    return this.state.dateContext.format(\"MMMM\")\n  }\n  daysInMonth = () => {\n    return this.state.dateContext.daysInMonth()\n  }\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\")\n  }\n  currentDate = () => {\n    console.log(\"currentDate: \", this.state.dateContext.get(\"date\"));\n    return this.state.dateContext.get(\"date\");\n  }\n  firstDayOfMonth = () => {\n    let dateContext = this.state.dateContext\n    let firstDay = moment(dateContext).startOf('month').format('d')\n    return firstDay\n  }\n  setMonth = (month) => {\n    let monthNumber = this.months.indexOf(month)\n    let dateContext = Object.assign({}, this.state.dateContext)\n    dateContext = moment(dateContext).set(\"month\", monthNumber)\n    this.setState({\n      dateContext: dateContext,\n    })\n  }\n\n  nextMonth = () => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).add(1, \"month\");\n      this.setState({\n          dateContext: dateContext\n      });\n      this.props.onNextMonth && this.props.onNextMonth();\n  }\n  prevMonth = () => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).subtract(1, \"month\");\n      this.setState({\n          dateContext: dateContext\n      });\n      this.props.onPrevMonth && this.props.onPrevMonth();\n  }\n  onSelectChange = (event, data) => {\n    this.setMonth(data)\n    this.props.onMonthChange && this.props.onMonthChange()\n  }\n  SelectList = (props) => {\n    let popup = props.data.map((data) => {\n      return (\n        <div key={data}>\n          <a\n            href=\"#\"\n            onClick={(event) => {\n              this.onSelectChange(event, data)\n            }}\n          >\n            {data}\n          </a>\n        </div>\n      )\n    })\n    return (\n      <div className=\"month-popup\">\n        {popup}\n      </div>\n    )\n  }\n  onChangeMonth = (event, month) => {\n    this.setState({\n      showMonthPopup: !this.state.showMonthPopup,\n    })\n  }\n  MonthNav = () => {\n    return (\n      <span\n        className=\"label-month\"\n        onClick={(event) => {\n          this.onChangeMonth(event, this.month())\n        }}\n      >\n        {this.month()}\n        {this.state.showMonthPopup &&\n        <this.SelectList data={this.months} />\n        }\n      </span>\n    )\n  }\n  showYearEditor = () => {\n    this.setState({\n      showYearNav: true\n    })\n  }\n  setYear = (year) => {\n    let dateContext = Object.assign({}, this.state.dateContext)\n    dateContext = moment(dateContext).set(\"year\", year)\n    this.setState({\n      dateContext: dateContext\n    })\n  }\n  onYearChange = (event) => {\n    this.setYear(event.target.value)\n    this.props.onYearChange && this.props.onYearChange(event, event.target.value)\n  }\n  onKeyUpYear = (event) => {\n    if (event.which === 13 || event.which === 27 ) {\n      this.setYear(event.target.value)\n      this.setState({\n        showYearNav: false\n      })\n    }\n  }\n  YearNav = () => {\n    return (\n      this.state.showYearNav ?\n      <input\n        type=\"number\"\n        defaultValue = {this.year()}\n        className=\"editor-year\"\n        ref={(yearInput) => {\n          this.yearInput = yearInput\n        }}\n        onKeyUp={(event) => {\n          this.onKeyUpYear(event)\n        }}\n        onChange={(event) => {\n          this.onYearChange(event)\n        }}\n        placeholder=\"year\"\n      />\n      :\n      <span\n        className=\"label-year\"\n        onDoubleClick={(event) => {\n          this.showYearEditor()\n        }}\n        >\n        {this.year()}\n      </span>\n    )\n  }\n  onDayClick = (e, day) => {\n      this.setState({\n          selectedDay: day\n      }, () => {\n          console.log(\"SELECTED DAY: \", this.state.selectedDay);\n      })\n      this.props.onDayClick && this.props.onDayClick(e, day);\n  }\n  render () {\n    let weekdays = this.weekdaysShort.map((day) => {\n      return (\n        <td key={day} className=\"week-day\">\n          {day}\n        </td>\n      )\n    })\n\n    let blanks = []\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(\n        <td key={i * 99} className=\"emptySlot\">\n          {\"\"}\n        </td>\n      )\n    }\n\n    let daysInMonth = []\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = (d == this.currentDay() ? \"day current-day\" : \"day\")\n      daysInMonth.push(\n        <td key={d} className={className}>\n          <span onClick={(event) => {\n            this.onDayClick(event, d)\n          }}>{d}</span>\n        </td>\n      )\n    }\n\n    let totalSlots = [...blanks, ...daysInMonth]\n    let rows = []\n    let cells = []\n\n    totalSlots.forEach((row, i) => {\n      if ((i % 7) !== 0) {\n        cells.push(row)\n      } else {\n        let insertRow = cells.slice()\n        rows.push(insertRow)\n        cells = []\n        cells.push(row)\n      }\n      if (i === totalSlots.length -1) {\n        let insertRow = cells.slice()\n        rows.push(insertRow)\n      }\n    })\n\n    let trElems = rows.map((d,i) => {\n      return (\n        <tr key={i*100}>\n          {d}\n        </tr>\n      )\n    })\n\n    return (\n      <div className=\"calendar-container\">\n        <table className=\"calendar\">\n          <thead>\n            <tr className=\"calendar-header\">\n              <td colSpan=\"5\">\n                <this.MonthNav />\n                {\" \"}\n                <this.YearNav />\n              </td>\n              <td colSpan=\"2\" >\n                <i className=\"prev fa fa-fw fa-chevron-left\"\n                  onClick={(event) => {\n                    {this.prevMonth()}\n                  }}>\n                   prev\n                </i>\n                {\"  \"}\n                <i className=\"prev fa fa-fw fa-chevron-right\"\n                  onClick={(event) => {\n                    {this.nextMonth()}\n                  }}>\n                   next\n                </i>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>{weekdays}</tr>\n            {trElems}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport { Calendar }\n","import React, { Component } from 'react'\nimport { Calendar } from './Calendar/Calendar'\n\nclass Show extends Component {\n  state = {\n    day: []\n  }\n  onDayClick = (event, day) => {\n    this.setState({\n      day: [...this.state.day, day]\n    })\n  }\n  render () {\n    return (\n      <>\n        <h2>Show Page</h2>\n        <Calendar\n          onDayClick={(event, day) => {\n            this.onDayClick(event, day)\n          }}\n        />\n      </>\n    )\n  }\n}\n\nexport { Show }\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Show } from \"./Show\"\n\nclass Listing extends Component {\n  state = {\n    showListing: false,\n    listing: {}\n  }\n  toggleShow = () => {\n    this.props.findListing(this.props.listingId)\n    this.setState({\n      showListing: !this.state.showListing\n    })\n  }\n  componentDidMount () {\n    this.setState({\n      listing: this.props.listing\n    })\n  }\n  render () {\n    return (\n      <>\n      {\n        this.state.showListing ?\n        <div className=\"show-container\">\n          <h3>{this.state.listing.title}</h3>\n          <img\n            src={this.state.listing.img} alt={this.state.listing.title}\n            className=\"show-image\"\n          />\n          <h5>Description</h5>\n          <p>{this.state.listing.year} {this.state.listing.make} {this.state.listing.model}</p>\n          <h4>Rate</h4><p>${this.state.listing.rate}/day</p>\n          <h5>Location</h5><p>{this.state.listing.location}</p>\n          <Show />\n          <button onClick={this.toggleShow}>Close</button>\n          <Link to=\"/edit\">Edit Listing</Link>\n        </div>\n        :\n        <div className=\"index-container\">\n          <h3>{this.props.listing.title}</h3>\n          <img\n            src={this.props.listing.img} alt={this.props.listing.title}\n            className=\"index-image\"\n          />\n          <h4>Rate</h4><p>${this.props.listing.rate}/day</p>\n          <button onClick={this.toggleShow}>See Full Listing</button>\n        </div>\n      }\n      </>\n    )\n  }\n}\n\nexport { Listing }\n","import React from 'react'\n\nfunction Search(props) {\n  return (\n    <div className=\"search-container\">\n      <form action=\"\" className=\"search-form\">\n        <h3>Book Equipment:</h3>\n        <div>\n          <label htmlFor=\"\">Location</label><br/>\n          <input type=\"text\" name=\"location\"/>\n        </div>\n        <div>\n          <label htmlFor=\"\">Start Date</label><br/>\n          <input type=\"text\" name=\"start-date\"/>\n        </div>\n        <div>\n          <label htmlFor=\"\">End Date</label><br/>\n          <input type=\"text\" name=\"end-date\"/>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Search\n","import React, { Component } from 'react'\nimport { Listing } from './Listing'\nimport Search from './Search'\n\nclass Index extends Component {\n  state = {\n    listings: []\n  }\n  render () {\n    return (\n      <>\n      <Search />\n      <div className=\"index\">\n        {\n          this.props.listings.map(\n            equipment =>\n\n            <Listing\n              key={equipment.id*5}\n              listing={equipment}\n              listings={this.props.listings}\n              listingId={equipment.id}\n              title={equipment.title}\n              findListing={this.props.findListing}\n            />\n          \n          )\n        }\n      </div>\n      </>\n    )\n  }\n}\n\nexport { Index }\n","// const BASE_URL = \"http://localhost:3000\"\n\nconst BASE_URL = \"https://plowshare-app-backend.herokuapp.com\"\n\nexport { BASE_URL }\n","import React, { Component } from 'react'\nimport { BASE_URL } from '../constants'\n\nclass Form extends Component {\n  state = {\n    title: '',\n    img: '',\n    make: '',\n    model: '',\n    year: 0,\n    rate: 0,\n    location: ''\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const newListing = {\n      title: this.state.title,\n      img: this.state.img,\n      make: this.state.make,\n      model: this.state.model,\n      year: this.state.year,\n      rate: this.state.rate,\n      location: this.state.location\n    }\n    console.log(newListing)\n    fetch( BASE_URL + '/equipment', {\n      body: JSON.stringify(newListing),\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(createdListing => createdListing.json())\n    .then(jsonedListing => console.log(jsonedListing))\n    .catch(error => console.log(error))\n  }\n  render () {\n    return (\n      <div>\n        <h3>Create a New Listing</h3>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            id=\"title\"/>\n          <br/>\n          <label htmlFor=\"img\">Image URL:</label>\n          <input\n            type=\"text\"\n            value={this.state.img}\n            onChange={this.handleChange}\n            id=\"img\"/>\n          <br/>\n          <label htmlFor=\"make\">Make:</label>\n          <input\n            type=\"text\"\n            value={this.state.make}\n            onChange={this.handleChange}\n            id=\"make\"/>\n          <br/>\n          <label htmlFor=\"model\">Model:</label>\n          <input\n            type=\"text\"\n            value={this.state.model}\n            onChange={this.handleChange}\n            id=\"model\"/>\n          <br/>\n          <label htmlFor=\"year\">Year:</label>\n          <input\n            type=\"number\"\n            value={this.state.year}\n            onChange={this.handleChange}\n            id=\"year\"/>\n          <br/>\n          <label htmlFor=\"location\">Location:</label>\n          <input\n            type=\"textarea\"\n            value={this.state.location}\n            onChange={this.handleChange}\n            id=\"location\"/>\n          <br/>\n          <label htmlFor=\"rate\">Cost per Day:</label>\n          <input\n            type=\"number\"\n            value={this.state.rate}\n            onChange={this.handleChange}\n            id=\"rate\"/>\n          <br/>\n          <input\n            type=\"submit\"\n          />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport { Form }\n","import React, { Component } from 'react'\nimport { Form } from './Form'\n\nclass New extends Component {\n  state = {\n    formVisible: false\n  }\n  toggleForm = () => {\n    this.setState({formVisible: !this.state.formVisible})\n  }\n  render () {\n    return (\n      <>\n        <h3>New Page</h3>\n        {\n          this.state.formVisible ? <Form />\n          :\n          <button onClick={this.toggleForm}>\n              Add New Listing\n          </button>\n        }\n      </>\n    )\n  }\n}\n\nexport { New }\n","import React, { Component } from 'react'\n\nclass Edit extends Component {\n  state = {\n    listing: {},\n    title: '',\n    img: '',\n    make: '',\n    model: '',\n    year: 0,\n    location: '',\n    rate: 0,\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleUpdate = (event) => {\n    const updatedListing = {\n      title: this.state.title,\n      img: this.state.img,\n      make: this.state.make,\n      model: this.state.model,\n      year: this.state.year,\n      location: this.state.location,\n      rate: this.state.rate,\n      id: this.state.listing.id\n    }\n    this.props.handleUpdate(event, updatedListing)\n  }\n  componentDidMount () {\n    this.setState({\n      listing: this.props.listing || '',\n      title: this.props.listing.title || '',\n      img: this.props.listing.img || '',\n      make: this.props.listing.make || '',\n      model: this.props.listing.model || '',\n      year: this.props.listing.year || '',\n      location: this.props.listing.location || '',\n      rate: this.props.listing.rate || '',\n    })\n  }\n  render () {\n    return (\n      <>\n        <div>\n          <h3>Edit Listing</h3>\n          <form onSubmit={this.handleUpdate}>\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.handleChange}\n              id=\"title\"/>\n            <br/>\n            <label htmlFor=\"img\">Image URL:</label>\n            <input\n              type=\"text\"\n              value={this.state.img}\n              onChange={this.handleChange}\n              id=\"img\"/>\n            <br/>\n            <label htmlFor=\"make\">Make:</label>\n            <input\n              type=\"text\"\n              value={this.state.make}\n              onChange={this.handleChange}\n              id=\"make\"/>\n            <br/>\n            <label htmlFor=\"model\">Model:</label>\n            <input\n              type=\"text\"\n              value={this.state.model}\n              onChange={this.handleChange}\n              id=\"model\"/>\n            <br/>\n            <label htmlFor=\"year\">Year:</label>\n            <input\n              type=\"number\"\n              value={this.state.year}\n              onChange={this.handleChange}\n              id=\"year\"/>\n            <br/>\n            <label htmlFor=\"location\">Location:</label>\n            <input\n              type=\"text\"\n              value={this.state.location}\n              onChange={this.handleChange}\n              id=\"location\"/>\n            <br/>\n            <label htmlFor=\"rate\">Cost per Day:</label>\n            <input\n              type=\"number\"\n              value={this.state.rate}\n              onChange={this.handleChange}\n              id=\"rate\"/>\n            <br/>\n            <input\n              type=\"submit\"\n            />\n          </form>\n          <button\n            onClick={()=> this.props.handleDelete(this.state.listing)\n            }>\n            Delete this Listing\n          </button>\n        </div>\n      </>\n    )\n  }\n}\n\nexport { Edit }\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport { Nav } from './components/Nav'\nimport Home from './components/Home'\nimport { Index } from './components/Index'\nimport { New } from './components/New'\nimport { Edit } from './components/Edit'\nimport { BASE_URL } from './constants'\n\n\nclass App extends React.Component {\n  state = {\n    listings : [],\n    listing: {}\n  }\n  componentDidMount () {\n    this.getListings()\n  }\n  getListings () {\n    fetch( BASE_URL + '/equipment')\n    .then(response => response.json())\n    .then(json => this.setState({\n      listings: json,\n    }))\n    .catch(error => console.log(error))\n  }\n  findListing = (id) => {\n    const copyListings = [...this.state.listings]\n    const findIndex = this.state.listings.findIndex(listing => listing.id === id)\n    this.setState({\n      listing: copyListings[findIndex]\n    })\n  }\n  handleUpdate = (event, updatedListing) => {\n    event.preventDefault()\n    console.log(updatedListing)\n    fetch( BASE_URL + `/equipment/${updatedListing.id}`, {\n      body: JSON.stringify(updatedListing),\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(() => {\n      this.getListings()\n    })\n    .catch(error => console.log(error))\n  }\n  handleDelete = (deletedNotice) => {\n    fetch( BASE_URL + `/equipment/${deletedNotice.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(() => {\n      this.getListings()\n    })\n    .catch(error => console.log(error))\n  }\n  render () {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Nav />\n          <Route path=\"/home\" exact component={Home}/>\n          <Route\n            path=\"/index\"\n            render={(props) =>\n              <Index\n                {...props}\n                listings={this.state.listings}\n                findListing={this.findListing}\n                listing={this.state.listing}\n              />\n            }\n          />\n          <Route\n            path=\"/edit\"\n            render={(props) =>\n              <Edit\n                {...props}\n                findListing={this.findListing}\n                listing={this.state.listing}\n                getListings={this.getListings}\n                handleUpdate={this.handleUpdate}\n                handleDelete={this.handleDelete}\n              />\n            }\n          />\n          <Route\n            path=\"/new\" component={New}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}